import { FormProps as FormProps$1, FormSubmitProps as FormSubmitProps$1 } from '@radix-ui/react-form';
import * as React$1 from 'react';
import { BaseActorRef } from 'xstate';
import { SetRequired } from 'type-fest';

type FormProps = Omit<FormProps$1, 'children'> & {
    children: React$1.ReactNode;
    flowActor?: BaseActorRef<{
        type: 'SUBMIT';
        action: 'submit';
    }>;
};

type FormSubmitProps = SetRequired<FormSubmitProps$1, 'children'>;
type FormSubmitComponent = React.ForwardRefExoticComponent<FormSubmitProps & React.RefAttributes<HTMLButtonElement>>;
/**
 * A `<button type="submit">` element.
 *
 * @param {boolean} [asChild] - When `true`, the component will render its child and passes all props to it.
 */
declare const Submit: FormSubmitComponent;

export { type FormSubmitProps as F, Submit as S, type FormProps as a };
